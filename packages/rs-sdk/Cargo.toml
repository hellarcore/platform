[package]
name = "rs-sdk"
version = "2.0.15"
edition = "2024"

[dependencies]
hpp = { path = "../rs-hpp", features = [
    "client",
    "validation",
    "identity-value-conversion",
] }
hapi-grpc = { path = "../hapi-grpc", features = ["client"] }
rs-hapi-client = { path = "../rs-hapi-client", default-features = false }
drive = { path = "../rs-drive", default-features = false, features = [
    "verify",
] }
drive-proof-verifier = { path = "../rs-drive-proof-verifier" }
# drive-abci is only needed for core rpc; TODO remove once we have correct core rpc impl
drive-abci = { path = "../rs-drive-abci", default-features = false }

bincode = { version = "2.0.0-rc.3", features = ["serde"], optional = true }
thiserror = "1.0.47"
tokio = { version = "1.32.0", features = ["macros"] }
async-trait = { version = "0.1.73" }
http = { version = "0.2.9" }
ciborium = { git = "https://github.com/qrayven/ciborium", branch = "feat-ser-null-as-undefined" }
serde = { version = "1.0.152", default-features = false, features = ["rc"] }
serde_json = { version = "1.0", features = ["preserve_order"], optional = true }
tracing = { version = "0.1.37" }
hex = { version = "0.4.3", optional = true }
dotenvy = { version = "0.15.7", optional = true }
envy = { version = "0.4.2", optional = true }
futures = { version = "0.3.28" }
derive_more = { version = "0.99.16" }
# hellarcore-rpc is only needed for core rpc; TODO remove once we have correct core rpc impl
hellarcore-rpc = { git = "https://github.com/hellarpay/rust-hellarcore-rpc", branch = "master" }

[dev-dependencies]
rs-hapi-client = { path = "../rs-hapi-client", features = ["mocks"] }
base64 = { version = "0.21.0" }
tracing-subscriber = { version = "0.3.16" }
hpp = { path = "../rs-hpp", features = [
    "client",
    "validation",
    "random-documents",
] }
data-contracts = { path = "../data-contracts" }
tokio-test = { version = "0.4.3" }

[features]
default = ["mocks", "offline-testing"]
mocks = [
    "dep:serde_json",
    "rs-hapi-client/mocks",
    "rs-hapi-client/dump",
    "hpp/document-cbor-conversion",
    "hpp/identity-value-conversion",
    "hpp/random-identities",
    "drive-proof-verifier/mocks",
    "dep:bincode",
    "dep:hex",
    "dep:dotenvy",
    "dep:envy",
]

# Run integration tests using test vectors from `tests/vectors/` instead of connecting to live Hellar Platform.
#
# This feature is enabled by default to allow testing without connecting to the Hellar Platform as
# part of CI/CD workflows.
#
# If both `offline-testing` and `network-testing` are enabled, "offline-testing" will take precedence.
offline-testing = ["mocks"]

# Run integration tests using a live Hellar Platform network.
#
# Requires configuration of Hellar Platform connectivity.
# See [README.md] for more details.
#
# If both `offline-testing` and `network-testing` are enabled, "offline-testing" will take precedence.
network-testing = ["mocks"]

# Generate test vectors for offline tests.
#
# This will run tests in `network-testing` mode and
# dump all requests and responses to `tests/vectors/`,
# so that they can be used later for `offline-testing`.
generate-test-vectors = ["network-testing"]
